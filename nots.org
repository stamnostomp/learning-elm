#+title: Nots

* arithmetic

** division

there is two forms of division in elm

1. "/" for floating point
2. "//" for integer


** infix vs prefix style

*** infix style

more traditional placing the operator in between the numerical arguments


#+begin_src elm
1 + 2
3 : number

42 * 10
420 : number
#+end_src

*** prefix style

more functional placing the operator in front of the numerical arguments

#+begin_src elm
(+) 1 2
3 : number

(*) 42 10
420 : number
#+end_src

** Operator precedence

Several operators can be used in a single line.

#+begin_src elm
42 * 200 - 8000
400

(42 * 200) - 8000
400

42 * (200 - 8000)
-327600
#+end_src

we can use parentheses to change the order operaters are applied * has a higher precedence than -. So if we want the - to be apllied first, then we must apply parentheses around its arguments.

Elm assigns numeric precedence values to operators, with 0 being the lowest precedence and 9 being the hightest. higher precedence number is applide first

*** associativity

associativity determines if an expression with multiple ooperators is evaluated from left to right or right to left

elm names are left-associative and right-associative

+, -, *, / are all left-associative

and ^ is right-associative

#+begin_src elm
2 ^ 3 ^ 2
512

(2 ^ 3) ^ 2
64
#+end_src


+------------+------------+--------------+
| Operators  | Precedence | Associativity|
+------------+------------+--------------+
|>>          |9           |left          |
+------------+------------+--------------+
|<<          |9           |right         |
+------------+------------+--------------+
|^           |8           |right         |
+------------+------------+--------------+
|* / // % rem|7           |left          |  
+------------+------------+--------------+
|+ -         |6           |left          |
+------------+------------+--------------+
|++ ::       |5           |right         |
+------------+------------+--------------+
|== /= < > <=|4           |none          |
+------------+------------+--------------+
|&&          |3           |right         |
+------------+------------+--------------+
|||          |2           |right         |
+------------+------------+--------------+
||>          |0           |left          |
+------------+------------+--------------+


* booleans

  Preforming operations from Boolean algebra is also quite straightforward in ELm

 #+begin_src elm
|| - or
&& - and
not - negation
xor - exclusive
#+end_src

elm dose not consider the number 0 or null as a synonymous with false nor non-zero to be true it must be exact
*** Comparison

        +------------+------------+
        | Operator   | Meaning    |
        +------------+------------+
        | ==         | Equal      |
        +------------+------------+
        | /=         | Not Equal  |
        +------------+------------+
        | >          | greater    |
        +------------+------------+
        | <          | less than  |
        +------------+------------+
        | <= >=      | or equal   |
        +------------+------------+
        | max        | large of 2 |
        +------------+------------+
        | min        | small of 2 |
        +------------+------------+

        
*** comments


  single Line comments are done with "--"

  Multi-line Comments start with "{-" and end with "-}"

        
**** tips
        to toggle a comment you can use an extra "-" and then add in a "}" to closes it

        {--
        some code
        
        --}


        {--}
        some code
        --}
